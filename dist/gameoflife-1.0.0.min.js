(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";var Event=function(s){this.publisher=s,this.subscribers=[]};Event.prototype={subscribe:function(s){this.subscribers.indexOf(s)<0&&this.subscribers.push(s)},unsubscribe:function(s){var i=this.subscribers.indexOf(s);i>-1&&this.subscribers.splice(i,1)},fire:function(s){var i=this.publisher;this.subscribers.forEach(function(r){r(i,s)})}},module.exports=Event;
},{}],2:[function(require,module,exports){
var Life=require("./life.js"),LifeController=require("./life-controller.js"),LifeView=require("./life-view.js").LifeView,ROWS=100,COLS=100;!function(){"use strict";var e=document.getElementById("life"),i=Life.from(ROWS,COLS,function(){return Math.random()>.5?1:0}),r=new LifeView(i,e);new LifeController(i,r).play()}();
},{"./life-controller.js":3,"./life-view.js":4,"./life.js":5}],3:[function(require,module,exports){
"use strict";var Timer=require("./timer.js"),LifeViewStates=require("./life-view.js").LifeViewStates,LifeController=function(i,e){this.life=i,this.lifeView=e,this.initialState=i.cells,this.init()};LifeController.prototype={init:function(){Timer.schedule(function(){this.life.next()}.bind(this)),this.lifeView.playButtonClicked.subscribe(this.play.bind(this)),this.lifeView.resetButtonClicked.subscribe(this.reset.bind(this))},play:function(){Timer.isTicking()?(Timer.stop(),this.lifeView.change(LifeViewStates.PAUSED)):(Timer.start(),this.lifeView.change(LifeViewStates.PLAYING))},reset:function(){this.life.cells=this.initialState,Timer.isTicking()||this.lifeView.draw(this.life)}},module.exports=LifeController;
},{"./life-view.js":4,"./timer.js":6}],4:[function(require,module,exports){
'use strict'

var Event = require('./event.js')

var WIDTH = 500
var HEIGHT = 500
var TXT_PAUSE = 'Pause'
var TXT_PLAY = 'Play'
var TXT_RESET = 'Reset'

var LifeViewStates = Object.freeze({
  PLAYING: 'playing',
  PAUSED: 'paused'
})

var LifeView = function (life, lifeDiv) {
  this.life = life
  this.lifeDiv = lifeDiv
  this.playButtonClicked = new Event(this)
  this.resetButtonClicked = new Event(this)

  this.init()
}

LifeView.prototype = {
  init: function () {
    // Canvas
    this.canvas = document.createElement('canvas')
    this.canvas.width = WIDTH
    this.canvas.height = HEIGHT
    this.lifeDiv.appendChild(this.canvas)

    // Controls container
    this.controlsDiv = document.createElement('div')
    this.lifeDiv.appendChild(this.controlsDiv)

    // Play/Pause button
    this.playButton = document.createElement('button')
    this.controlsDiv.appendChild(this.playButton)

    // Reset button
    this.resetButton = document.createElement('button')
    this.resetButton.innerText = TXT_RESET
    this.controlsDiv.appendChild(this.resetButton)

    // Subscribe to events
    this.life.changed.subscribe(this.draw.bind(this))

    // Publish events
    this.playButton.addEventListener('click', function () {
      this.playButtonClicked.fire()
    }.bind(this))
    this.resetButton.addEventListener('click', function () {
      this.resetButtonClicked.fire()
    }.bind(this))

    this.change(LifeViewStates.PAUSED)
  },
  change: function (viewState) {
    switch (viewState) {
      case LifeViewStates.PLAYING:
        this.playButton.innerText = TXT_PAUSE
        break
      case LifeViewStates.PAUSED:
        this.playButton.innerText = TXT_PLAY
        break
    }
  },
  draw: function (life) {
    var context = this.canvas.getContext('2d')
    context.clearRect(0, 0, this.canvas.width, this.canvas.height)
    context.fillStyle = 'black'
    for (var x = 0; x < life.cols(); x++) {
      for (var y = 0; y < life.rows(); y++) {
        var state = this.life.cell(x, y)
        if (state === 1) {
          var xpos = x * 5
          var ypos = y * 5
          context.fillRect(xpos, ypos, 5, 5)
        }
      }
    }
  }
}

module.exports = { LifeView, LifeViewStates }

},{"./event.js":1}],5:[function(require,module,exports){
"use strict";var Event=require("./event.js"),Life=function(t){this.cells=t||[],this.changed=new Event(this)};Life.prototype={cols:function(){return this.cells.length},rows:function(){return this.cols()>0?this.cells[0].length:0},cell:function(t,e){var i=e>=0,n=t>=0,s=t<this.cols(),r=e<this.rows();return n&&s&&i&&r?this.cells[t][e]:0},next:function(){this.cells=this.cells.map(function(t,e){return t.map(function(t,i){var n=this.neighbors(e,i);switch(t){case 0:3===n&&(t=1);break;case 1:(n<2||n>3)&&(t=0)}return t},this)},this),this.changed.fire()},neighbors:function(t,e){return this.cell(t,e-1)+this.cell(t,e+1)+this.cell(t-1,e-1)+this.cell(t-1,e)+this.cell(t-1,e+1)+this.cell(t+1,e-1)+this.cell(t+1,e)+this.cell(t+1,e+1)}},Life.from=function(t,e,i){return new Life(Array.from({length:100},function(t){return Array.from({length:100},function(e){return i(t,e)})}))},module.exports=Life;
},{"./event.js":1}],6:[function(require,module,exports){
"use strict";var Timer=function(){function n(){for(var i=0;i<e.length;i++)e[i]();t=window.requestAnimationFrame(function(){n()})}function i(){return void 0!==t}var t,e=[];return{schedule:function(n,i){e.indexOf(n)<0&&e.push(n)},cancel:function(n){var i=e.indexOf(n);i>-1&&e.splice(i,1)},isTicking:i,start:function(){i()||n()},stop:function(){i()&&(window.cancelAnimationFrame(t),t=void 0)}}}();module.exports=Timer;
},{}]},{},[2]);
